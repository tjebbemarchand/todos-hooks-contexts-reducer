{"version":3,"sources":["hooks/useInputState.js","reducers/todo.reducer.js","contexts/todos.context.js","hooks/useLocalStorageReducer.js","EditTodoForm.js","hooks/useToggleState.js","Todo.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","index.js"],"names":["initialVal","useState","value","setValue","e","target","reducer","state","action","type","id","uuid","task","completed","filter","todo","map","newTask","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","key","defaultVal","useReducer","JSON","parse","window","localStorage","getItem","String","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","todoReducer","todos","Provider","children","EditTodoForm","toggleIsEditing","useInputState","handleChange","reset","useContext","onSubmit","preventDefault","style","marginLeft","width","TextField","margin","onChange","fullWidth","autoFocus","useToggle","setState","memo","useToggleState","isEditing","ListItem","height","Checkbox","tabIndex","checked","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","length","Paper","List","i","Fragment","Divider","TodoForm","padding","label","TodoApp","backgroundColor","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","md","lg","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73ddd72c.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default initialVal => {\n    const [value, setValue] = useState(initialVal);\n    const handleChange = e => {\n        setValue(e.target.value);\n    };\n    const reset = () => {\n        setValue(\"\");\n    };\n    return [value, handleChange, reset];\n};\n","import uuid from \"uuid/v4\";\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"ADD\":\n            return [...state, { id: uuid(), task: action.task, completed: false }];\n        case \"REMOVE\":\n            return state.filter(todo => todo.id !== action.id);\n        case \"TOGGLE\":\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n            );\n        case \"EDIT\":\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, task: action.newTask } : todo\n            );\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React, { createContext } from \"react\";\nimport todoReducer from \"../reducers/todo.reducer\";\nimport { useLocalStorageReducer } from \"../hooks/useLocalStorageReducer\";\n\nconst defaultTodos = [\n    {\n        id: 1,\n        task: \"Mow the lawn\",\n        completed: false\n    },\n    {\n        id: 2,\n        task: \"Release lady bugs into garden\",\n        completed: true\n    }\n];\n\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TodosProvider(props) {\n    const [todos, dispatch] = useLocalStorageReducer(\"todos\", defaultTodos, todoReducer);\n    return (\n        <TodosContext.Provider value={todos}>\n            <DispatchContext.Provider value={dispatch}>{props.children}</DispatchContext.Provider>\n        </TodosContext.Provider>\n    );\n}\n","import { useEffect, useReducer } from \"react\";\n\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\n    const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n        let value;\n        try {\n            value = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n        } catch (e) {\n            value = defaultVal;\n        }\n        return value;\n    });\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [state]);\n    return [state, dispatch];\n}\nexport { useLocalStorageReducer };\n","import React, { useContext } from \"react\";\nimport useInputState from \"./hooks/useInputState\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DispatchContext } from \"./contexts/todos.context\";\n\nfunction EditTodoForm({ id, task, toggleIsEditing }) {\n    const [value, handleChange, reset] = useInputState(task);\n    const dispatch = useContext(DispatchContext);\n    return (\n        <form\n            onSubmit={e => {\n                e.preventDefault();\n                dispatch({ type: \"EDIT\", id, newTask: value });\n                reset();\n                toggleIsEditing();\n            }}\n            style={{ marginLeft: \"1rem\", width: \"100%\" }}\n        >\n            <TextField margin=\"normal\" value={value} onChange={handleChange} fullWidth autoFocus />\n        </form>\n    );\n}\n\nexport default EditTodoForm;\n","import { useState } from \"react\";\nfunction useToggle(initialVal = false) {\n    const [state, setState] = useState(initialVal);\n    const toggle = () => {\n        setState(!state);\n    };\n    return [state, toggle];\n}\nexport default useToggle;\n","import React, { useContext, memo } from \"react\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"./contexts/todos.context\";\n\nfunction Todo({ id, task, completed }) {\n    const dispatch = useContext(DispatchContext);\n\n    const [isEditing, toggleIsEditing] = useToggleState(false);\n    return (\n        <ListItem style={{ height: \"64px\" }}>\n            {isEditing ? (\n                <EditTodoForm id={id} task={task} toggleIsEditing={toggleIsEditing} />\n            ) : (\n                <>\n                    <Checkbox\n                        tabIndex={-1}\n                        checked={completed}\n                        onClick={() => dispatch({ type: \"TOGGLE\", id })}\n                    />\n                    <ListItemText style={{ textDecoration: completed ? \"line-through\" : \"none\" }}>\n                        {task}\n                    </ListItemText>\n                    <ListItemSecondaryAction>\n                        <IconButton aria-label=\"Edit\" onClick={toggleIsEditing}>\n                            <EditIcon />\n                        </IconButton>\n                        <IconButton\n                            aria-label=\"Delete\"\n                            onClick={() => dispatch({ type: \"REMOVE\", id })}\n                        >\n                            <DeleteIcon />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </>\n            )}\n        </ListItem>\n    );\n}\n\nexport default memo(Todo);\n","import React, { useContext } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Todo from \"./Todo\";\nimport { TodosContext } from \"./contexts/todos.context\";\n\nfunction TodoList() {\n    const todos = useContext(TodosContext);\n\n    if (todos.length)\n        return (\n            <Paper>\n                <List>\n                    {todos.map((todo, i) => (\n                        <React.Fragment key={todo.id}>\n                            <Todo key={todo.id} {...todo} />\n                            {i < todos.length - 1 && <Divider />}\n                        </React.Fragment>\n                    ))}\n                </List>\n            </Paper>\n        );\n    return null;\n}\n\nexport default TodoList;\n","import React, { useContext } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./contexts/todos.context\";\n\nfunction TodoForm() {\n    const [value, handleChange, reset] = useInputState(\"\");\n    const dispatch = useContext(DispatchContext);\n\n    return (\n        <Paper style={{ margin: \"1rem 0\", padding: \"0 1rem\" }}>\n            <form\n                onSubmit={e => {\n                    e.preventDefault();\n                    dispatch({ type: \"ADD\", task: value });\n                    reset();\n                }}\n            >\n                <TextField\n                    value={value}\n                    onChange={handleChange}\n                    margin=\"normal\"\n                    label=\"Add new Todo\"\n                    fullWidth\n                />\n            </form>\n        </Paper>\n    );\n}\n\nexport default TodoForm;\n","import React from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoForm from \"./TodoForm\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { TodosProvider } from \"./contexts/todos.context\";\n\nfunction TodoApp() {\n    return (\n        <Paper\n            style={{\n                padding: 0,\n                margin: 0,\n                height: \"100vh\",\n                backgroundColor: \"#fafafa\"\n            }}\n        >\n            <AppBar color=\"primary\" position=\"static\" style={{ height: \"64px\" }}>\n                <Toolbar>\n                    <Typography color=\"inherit\">React Todo App</Typography>\n                </Toolbar>\n            </AppBar>\n            <Grid container justify=\"center\" style={{ marginTop: \"1rem\" }}>\n                <Grid item xs={11} md={8} lg={4}>\n                    <TodosProvider>\n                        <TodoForm />\n                        <TodoList />\n                    </TodosProvider>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default TodoApp;\n","import React from \"react\";\nimport TodoApp from \"./TodoApp\";\n\nfunction App() {\n    return <TodoApp />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}